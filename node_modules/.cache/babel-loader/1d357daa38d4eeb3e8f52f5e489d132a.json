{"ast":null,"code":"export var truncateAddress = function truncateAddress(address) {\n  if (!address) return \"No Account\";\n  var match = address.match(/^(0x[a-zA-Z0-9]{2})[a-zA-Z0-9]+([a-zA-Z0-9]{2})$/);\n  if (!match) return address;\n  return \"\".concat(match[1], \"\\u2026\").concat(match[2]);\n};\nexport var toHex = function toHex(num) {\n  var val = Number(num);\n  return \"0x\" + val.toString(16);\n};","map":{"version":3,"names":["truncateAddress","address","match","toHex","num","val","Number","toString"],"sources":["/Users/gyan/Documents/ProjectGyan/Hackathons/HackMoney/web3react-demo-forked/src/utils.js"],"sourcesContent":["export const truncateAddress = (address) => {\n  if (!address) return \"No Account\";\n  const match = address.match(\n    /^(0x[a-zA-Z0-9]{2})[a-zA-Z0-9]+([a-zA-Z0-9]{2})$/\n  );\n  if (!match) return address;\n  return `${match[1]}â€¦${match[2]}`;\n};\n\nexport const toHex = (num) => {\n  const val = Number(num);\n  return \"0x\" + val.toString(16);\n};\n"],"mappings":"AAAA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD,EAAa;EAC1C,IAAI,CAACA,OAAL,EAAc,OAAO,YAAP;EACd,IAAMC,KAAK,GAAGD,OAAO,CAACC,KAAR,CACZ,kDADY,CAAd;EAGA,IAAI,CAACA,KAAL,EAAY,OAAOD,OAAP;EACZ,iBAAUC,KAAK,CAAC,CAAD,CAAf,mBAAsBA,KAAK,CAAC,CAAD,CAA3B;AACD,CAPM;AASP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAS;EAC5B,IAAMC,GAAG,GAAGC,MAAM,CAACF,GAAD,CAAlB;EACA,OAAO,OAAOC,GAAG,CAACE,QAAJ,CAAa,EAAb,CAAd;AACD,CAHM"},"metadata":{},"sourceType":"module"}